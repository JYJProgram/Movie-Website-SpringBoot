name: Deploy to Amazon EC2

on:
  push:
    branches:
      - master

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: bemo-deploy-final
  CODE_DEPLOY_APPLICATION_NAME: my-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-codedeploy-deployment-app

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties
      - run: touch ./src/main/resources/application-db.properties
      - run: echo "${{ secrets.DBAPPLICATION }}" > ./src/main/resources/application-db.properties
      - run: cat ./src/main/resources/application.properties
      - run: touch ./src/main/resources/applicatio-oauth.properties
      - run: echo "${{ secrets.OAUTHAPPLICATION }}" > ./src/main/resources/application-oauth.properties
      - run: touch ./src/main/resources/application-real1.properties
      - run: echo "${{ secrets.APPLICATION_REAL1 }}" > ./src/main/resources/application-real1.properties
      - run: touch ./src/main/resources/application-real2.properties
      - run: echo "${{ secrets.APPLICATION_REAL2 }}" > ./src/main/resources/application-real2.properties


      # (2) JDK 11 세팅
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      #빌드 속도 개선
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # (3) Gradle build (Test 제외)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build


      - name: Make zip file #1
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (5) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to S3 #3
        run: aws s3 cp --region ap-northeast-2 s3://$S3_BUCKET_NAME/bemo.zip

      # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=bemo.zip,bundleType=zip
